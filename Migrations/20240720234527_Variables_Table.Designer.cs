// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PZBot.Entities;

#nullable disable

namespace PZBot.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20240720234527_Variables_Table")]
    partial class Variables_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PZBot.Entities.ChannelCommands", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ChannelId");

                    b.ToTable("ChannelCommands");
                });

            modelBuilder.Entity("PZBot.Entities.Channels", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("PZBot.Entities.CommandVariables", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parent")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CommandId");

                    b.ToTable("CommandVariables");
                });

            modelBuilder.Entity("PZBot.Entities.ChannelCommands", b =>
                {
                    b.HasOne("PZBot.Entities.Channels", "Channels")
                        .WithMany("ChannelCommands")
                        .HasForeignKey("ChannelId")
                        .HasPrincipalKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channels");
                });

            modelBuilder.Entity("PZBot.Entities.CommandVariables", b =>
                {
                    b.HasOne("PZBot.Entities.ChannelCommands", "ChannelCommands")
                        .WithMany("CommandVariables")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelCommands");
                });

            modelBuilder.Entity("PZBot.Entities.ChannelCommands", b =>
                {
                    b.Navigation("CommandVariables");
                });

            modelBuilder.Entity("PZBot.Entities.Channels", b =>
                {
                    b.Navigation("ChannelCommands");
                });
#pragma warning restore 612, 618
        }
    }
}
